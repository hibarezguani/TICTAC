{"version":3,"file":"component---src-pages-game-js.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/TicTacToe.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/pages/game.js","webpack://gatsby-starter-default/./src/styles/global.css"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst TicTacToe = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(''));\r\n  const [currentPlayer, setCurrentPlayer] = useState('X');\r\n  const [winner, setWinner] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [vsComputer, setVsComputer] = useState(false);\r\n\r\n  const winningPositions = [\r\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n    [0, 4, 8], [2, 4, 6]\r\n  ];\r\n\r\n  const checkWinner = () => {\r\n    for (let i = 0; i < winningPositions.length; i++) {\r\n      const [a, b, c] = winningPositions[i];\r\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n        return board[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const isBoardFull = () => {\r\n    return board.every(cell => cell !== '');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const winnerPlayer = checkWinner();\r\n    if (winnerPlayer) {\r\n      setWinner(winnerPlayer);\r\n      setGameOver(true);\r\n    } else if (isBoardFull()) {\r\n      setWinner('Draw');\r\n      setGameOver(true);\r\n    } else if (vsComputer && currentPlayer === 'O') {\r\n      // If playing against the computer and it's computer's turn ('O')\r\n      const emptyCells = board.reduce((acc, cell, index) => {\r\n        if (cell === '') acc.push(index);\r\n        return acc;\r\n      }, []);\r\n      const randomIndex = emptyCells[Math.floor(Math.random() * emptyCells.length)];\r\n      handleCellClick(randomIndex);\r\n    }\r\n  }, [board, gameOver, currentPlayer, vsComputer]);\r\n\r\n  const handleCellClick = useCallback(\r\n    (index) => {\r\n      if (gameOver || board[index]) return;\r\n\r\n      const newBoard = [...board];\r\n      newBoard[index] = currentPlayer;\r\n\r\n      setBoard(newBoard);\r\n      setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\r\n    },\r\n    [board, currentPlayer, gameOver]\r\n  );\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(9).fill(''));\r\n    setCurrentPlayer('X');\r\n    setWinner(null);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const getWinnerMessage = () => {\r\n    if (winner) {\r\n      if (winner === 'Draw') {\r\n        return (\r\n          <p className=\"text-2xl font-bold\">\r\n            It's a Draw!\r\n          </p>\r\n        );\r\n      } else {\r\n        return (\r\n          <p className=\"text-2xl font-bold\">\r\n            Winner is <span className={winner === 'X' ? 'text-blue-500' : 'text-red-500'}>{winner}</span>!\r\n          </p>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <p className=\"text-2xl font-bold\">\r\n          {currentPlayer === 'X' ? \"X's turn\" : \"O's turn\"}\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getCellClassName = (index) => {\r\n    if (winner && winningPositions.some(pos => pos.includes(index))) {\r\n      const isWinningCell = winningPositions.some(pos => pos.includes(index) && pos.every(i => board[i] === board[index]));\r\n      return `w-16 h-16 border border-gray-300 flex items-center justify-center text-4xl focus:outline-none ${\r\n        board[index] === 'X' ? 'text-blue-500' : 'text-red-500'\r\n      } ${isWinningCell ? 'bg-green-200' : ''}`;\r\n    }\r\n    return `w-16 h-16 border border-gray-300 flex items-center justify-center text-4xl focus:outline-none ${\r\n      board[index] === 'X' ? 'text-blue-500' : 'text-red-500'\r\n    }`;\r\n  };\r\n\r\n\r\n  const renderCell = (index) => {\r\n    return (\r\n      <button\r\n        key={index}\r\n        onClick={() => handleCellClick(index)}\r\n        className={getCellClassName(index)}\r\n        disabled={gameOver || board[index] !== ''}\r\n      >\r\n        {board[index]}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const toggleVsComputer = () => {\r\n    setVsComputer(!vsComputer);\r\n    resetGame();\r\n  };\r\n\r\n  const toggleVsHuman = () => {\r\n    setVsComputer(false);\r\n    resetGame();\r\n  };\r\n\r\n  const rows = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    const row = [];\r\n    for (let j = 0; j < 3; j++) {\r\n      const index = i * 3 + j;\r\n      row.push(renderCell(index));\r\n    }\r\n    rows.push(<div key={i} className=\"flex\">{row}</div>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <div className=\"mb-4\">\r\n        <button\r\n          onClick={toggleVsHuman}\r\n          className={`px-4 py-2 mr-4 bg-blue-500 text-white font-semibold rounded-md focus:outline-none ${!vsComputer ? 'bg-gray-600' : ''}`}\r\n        >\r\n          Play against Human\r\n        </button>\r\n        <button\r\n          onClick={toggleVsComputer}\r\n          className={`px-4 py-2 bg-blue-500 text-white font-semibold rounded-md focus:outline-none ${vsComputer ? 'bg-gray-600' : ''}`}\r\n        >\r\n          Play against Computer\r\n        </button>\r\n      </div>\r\n      <div className=\"flex flex-col items-center\">\r\n        {rows}\r\n      </div>\r\n      <div className=\"mb-4\">{getWinnerMessage()}</div>\r\n      <button\r\n        onClick={resetGame}\r\n        className=\"px-4 py-2 bg-blue-500 text-white font-semibold rounded-md focus:outline-none\"\r\n      >\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicTacToe;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <nav className=\"flex justify-between items-center py-4\">\r\n        <ul className=\"flex items-center\">\r\n          <li><Link to=\"/\">Accueil</Link></li>\r\n          <li className=\"ml-4\"><Link to=\"/about\">À propos</Link></li>\r\n          <li className=\"ml-4\"><Link to=\"/game\">Jouer au Tic Tac Toe</Link></li>\r\n        </ul>\r\n        <ul className=\"flex items-center\">\r\n          <li className=\"ml-4\"><Link to=\"/signin\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Se connecter</Link></li>\r\n          <li className=\"ml-4\"><Link to=\"/signup\" className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">S'inscrire</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"../styles/global.css\";\r\nimport TicTacToe from '../components/TicTacToe';\r\nimport Header from '../components/header';\r\n\r\nconst TicTacToePage = () => {\r\n  return (\r\n  <div className=\"app \">\r\n  <div className=\"content\">\r\n  <Header />\r\n   </div>\r\n   <div className=\"content app\">\r\n   <h1>Jouer au Tic Tac Toe</h1>\r\n    <TicTacToe />\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicTacToePage;",""],"names":["React","useState","useEffect","useCallback","TicTacToe","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","winner","setWinner","gameOver","setGameOver","vsComputer","setVsComputer","winningPositions","checkWinner","i","length","a","b","c","isBoardFull","every","cell","winnerPlayer","emptyCells","reduce","acc","index","push","randomIndex","Math","floor","random","handleCellClick","newBoard","resetGame","getWinnerMessage","getCellClassName","some","pos","includes","isWinningCell","renderCell","toggleVsComputer","toggleVsHuman","rows","row","j","Link","Header","TicTacToePage"],"sourceRoot":""}